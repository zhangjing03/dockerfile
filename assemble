#!/bin/bash

# Prevent running assemble in builders different than official STI image.
# The official nodejs:6-onbuild already run npm install and use different
# application folder.
[ -d "/usr/src/app" ] && exit 0

set -e

# FIXME: Linking of global modules is disabled for now as it causes npm failures
#        under RHEL7
# Global modules good to have
# npmgl=$(grep "^\s*[^#\s]" ../etc/npm_global_module_list | sort -u)
# Available global modules; only match top-level npm packages
#global_modules=$(npm ls -g 2> /dev/null | perl -ne 'print "$1\n" if /^\S+\s(\S+)\@[\d\.-]+/' | sort -u)
# List all modules in common
#module_list=$(/usr/bin/comm -12 <(echo "${global_modules}") | tr '\n' ' ')
# Link the modules
#npm link $module_list

shopt -s dotglob
echo "---> Installing application source ..."
mv /tmp/src/* ./

if [ ! -z $HTTP_PROXY ]; then
	echo "---> Setting cnpm http proxy to $HTTP_PROXY"
	cnpm config set proxy $HTTP_PROXY
fi

if [ ! -z $http_proxy ]; then
	echo "---> Setting cnpm http proxy to $http_proxy"
	cnpm config set proxy $http_proxy
fi

if [ ! -z $HTTPS_PROXY ]; then
	echo "---> Setting cnpm https proxy to $HTTPS_PROXY"
	cnpm config set https-proxy $HTTPS_PROXY
fi

if [ ! -z $https_proxy ]; then
	echo "---> Setting cnpm https proxy to $https_proxy"
	cnpm config set https-proxy $https_proxy
fi

# Change the npm registry mirror if provided
if [ -n "$NPM_MIRROR" ]; then
	cnpm config set registry $NPM_MIRROR
fi

echo "---> Building your Node application from source"
cnpm install
echo cnpm install result=$?

# Fix source directory permissions
[ "1$PACKAGE_COMMAND" != "1" ] && /bin/sh -c " $PACKAGE_COMMAND"
fix-permissions ./
